{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marsh\\\\Desktop\\\\Diversos\\\\NextLevelWeek\\\\1\\\\Aulas\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport axios from 'axios';\nimport api from '../../services/api';\nimport Dropzone from '../../components/Dropzone';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [cityNames, setCityNames] = useState([]);\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [startPosition, setStartPosition] = useState([0, 0]);\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectedFile, setSelectedFile] = useState();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const history = useHistory();\n  useEffect(() => {\n    //        setStartPosition([-23.2049009, -45.8944638]);\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setStartPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios?orderBy=nome`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCityNames(cityNames);\n    });\n  }, [selectedUf]);\n\n  function handleSelectedUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  ;\n\n  function handleSelectedCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n  }\n\n  function handleInputChange(event) {\n    setFormData({ ...formData,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected >= 0) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const [latitude, longitude] = selectedPosition;\n    const items = selectedItems;\n    const data = new FormData();\n    data.append('title', name);\n    data.append('email', email);\n    data.append('whatsapp', whatsapp);\n    data.append('uf', uf);\n    data.append('city', city);\n    data.append('latitude', String(latitude));\n    data.append('longitude', String(longitude));\n    data.append('items', items.join(','));\n\n    if (selectedFile) {\n      data.append('image', selectedFile);\n    } // deu pau na latitude e longitude... NÃ£o pegou ponto!!!\n\n\n    await api.post('points', data);\n    alert('Ponto de alerta criado.');\n    history.push('/');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 27\n    }\n  })), /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Voltar para home\"))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Cadastro do\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 32\n    }\n  }), \"Ponto de Coleta.\"), /*#__PURE__*/React.createElement(Dropzone, {\n    onFileUploaded: setSelectedFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 29\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, \"Nome da Entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onBlur: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onBlur: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onBlur: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 29\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 46\n    }\n  }, \"Selecione o Endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: startPosition,\n    zoom: 15,\n    onclick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 29\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectedUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, \"Selecione\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 37\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 29\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    value: selectedCity,\n    onChange: handleSelectedCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 33\n    }\n  }, \"Selecione\"), cityNames.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 37\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, \"Itens de Coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 53\n    }\n  }, \"Selecione um ou mais itens de coleta\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 21\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 33\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/Users/marsh/Desktop/Diversos/NextLevelWeek/1/Aulas/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","useHistory","FiArrowLeft","Map","TileLayer","Marker","axios","api","Dropzone","CreatePoint","items","setItems","ufs","setUfs","selectedUf","setSelectedUf","cityNames","setCityNames","selectedCity","setSelectedCity","startPosition","setStartPosition","selectedPosition","setSelectedPosition","selectedItems","setSelectedItems","selectedFile","setSelectedFile","formData","setFormData","name","email","whatsapp","history","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","city","nome","handleSelectedUf","event","target","value","handleSelectedCity","handleMapClick","latlng","lat","lng","handleInputChange","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleSubmit","preventDefault","FormData","append","String","join","post","alert","push","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, ChangeEvent, FocusEvent, FormEvent} from 'react';\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { FiArrowLeft } from 'react-icons/fi';\r\nimport { Map, TileLayer, Marker } from 'react-leaflet';\r\nimport { LeafletMouseEvent } from 'leaflet';\r\nimport axios from 'axios';\r\nimport api from '../../services/api';\r\nimport Dropzone from '../../components/Dropzone';\r\n\r\nimport './styles.css';\r\n\r\nimport logo from '../../assets/logo.svg';\r\n\r\ninterface Item {\r\n    id: number;\r\n    title: string;\r\n    image_url: string;\r\n}\r\n\r\ninterface IBGEUFResponse {\r\n    sigla: string;\r\n}\r\n\r\ninterface IBGECityResponse {\r\n    nome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n    const [items, setItems] = useState<Item[]>([]);\r\n    const [ufs, setUfs] = useState<string[]>([]);\r\n    const [selectedUf, setSelectedUf] = useState('0');\r\n    const [cityNames, setCityNames] = useState<string[]>([]);\r\n    const [selectedCity, setSelectedCity] = useState('0');\r\n    const [startPosition, setStartPosition] = useState<[number, number]>([0, 0]);\r\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0, 0]);\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n    const [selectedFile, setSelectedFile] = useState<File>();\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        whatsapp: '',\r\n    })\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n//        setStartPosition([-23.2049009, -45.8944638]);\r\n        navigator.geolocation.getCurrentPosition(position =>{\r\n            const   {latitude, longitude } = position.coords;\r\n            setStartPosition([latitude, longitude]);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        api.get('items').then(response => {\r\n            setItems(response.data);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        axios\r\n            .get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados?orderBy=nome')\r\n            .then(response => {\r\n                const ufInitials = response.data.map(uf => uf.sigla)\r\n                setUfs(ufInitials);\r\n        })\r\n    }, []);\r\n\r\n    useEffect(()=>{\r\n        if(selectedUf==='0'){\r\n            return;\r\n        }\r\n        axios\r\n            .get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios?orderBy=nome`)\r\n            .then(response => {\r\n            const cityNames  = response.data.map(city => city.nome)\r\n            setCityNames(cityNames);\r\n        })\r\n    \r\n    }, [selectedUf]);\r\n\r\n    function handleSelectedUf(event: ChangeEvent<HTMLSelectElement>){\r\n        const uf = event.target.value;\r\n        setSelectedUf(uf);\r\n    };\r\n\r\n    function handleSelectedCity(event: ChangeEvent<HTMLSelectElement>){\r\n        const city = event.target.value;\r\n        setSelectedCity(city);\r\n    }\r\n\r\n    function handleMapClick(event: LeafletMouseEvent){\r\n        setSelectedPosition([event.latlng.lat, event.latlng.lng]);\r\n    }\r\n\r\n    function handleInputChange(event: FocusEvent<HTMLInputElement>){\r\n        setFormData({...formData, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    function handleSelectItem(id: number){\r\n        const alreadySelected = selectedItems.findIndex(item => item === id);\r\n        if(alreadySelected >= 0){\r\n            const filteredItems = selectedItems.filter(item => item !== id);\r\n            setSelectedItems(filteredItems);\r\n        } else {\r\n            setSelectedItems([...selectedItems, id]);\r\n        }\r\n    }\r\n\r\n    async function handleSubmit(event: FormEvent){\r\n        event.preventDefault();\r\n\r\n        const { name, email, whatsapp } = formData;\r\n        const uf = selectedUf;\r\n        const city = selectedCity;\r\n        const [latitude, longitude] = selectedPosition;\r\n        const items = selectedItems;\r\n\r\n        const data = new FormData();\r\n        data.append('title', name);\r\n        data.append('email', email);\r\n        data.append('whatsapp', whatsapp);\r\n        data.append('uf', uf);\r\n        data.append('city', city);\r\n        data.append('latitude', String(latitude));\r\n        data.append('longitude', String(longitude));\r\n        data.append('items', items.join(','));\r\n\r\n        if (selectedFile) {\r\n            data.append('image', selectedFile)\r\n        }\r\n        \r\n        // deu pau na latitude e longitude... NÃ£o pegou ponto!!!\r\n\r\n        await api.post('points', data);\r\n        alert('Ponto de alerta criado.')\r\n        history.push('/');\r\n    }\r\n\r\n    return (\r\n        <div id=\"page-create-point\">\r\n            <header>\r\n                <img src={logo} alt='Ecoleta'/>\r\n                <Link to=\"/\">\r\n                    <span><FiArrowLeft/></span>\r\n                    <strong>Voltar para home</strong>\r\n                </Link>    \r\n            </header>\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Cadastro do<br/>Ponto de Coleta.</h1>\r\n                <Dropzone onFileUploaded={setSelectedFile}/>\r\n                <fieldset>\r\n                    <legend><h2>Dados</h2></legend>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"name\">Nome da Entidade</label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" onBlur={handleInputChange}/>\r\n                    </div>\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"email\">E-mail</label>\r\n                            <input type=\"email\" name=\"email\" id=\"email\" onBlur={handleInputChange}/>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"whatsapp\">Whatsapp</label>\r\n                            <input type=\"text\" name=\"whatsapp\" id=\"whatsapp\" onBlur={handleInputChange}/>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend><h2>EndereÃ§o</h2><span>Selecione o EndereÃ§o no mapa</span></legend>\r\n                    <Map center={startPosition} zoom={15} onclick={handleMapClick}>\r\n                        <TileLayer\r\n                            attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker position={selectedPosition}/>\r\n                    </Map>\r\n                    <div className=\"field-group\">\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"uf\">Estado (UF)</label>\r\n                            <select name=\"uf\" id=\"uf\" value={selectedUf} onChange={handleSelectedUf}>\r\n                                <option value=\"0\">Selecione</option>\r\n                                {ufs.map(uf => (\r\n                                    <option key={uf} value={uf}>{uf}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label htmlFor=\"city\">Cidade</label>\r\n                            <select name=\"city\" id=\"city\" value={selectedCity} onChange={handleSelectedCity}>\r\n                                <option value=\"0\">Selecione</option>\r\n                                {cityNames.map(city => (\r\n                                    <option key={city} value={city}>{city}</option>\r\n                                ))}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend><h2>Itens de Coleta</h2><span>Selecione um ou mais itens de coleta</span></legend>\r\n                    <ul className=\"items-grid\">\r\n                        {items.map(item => (\r\n                            <li\r\n                                key={item.id}\r\n                                onClick={() => handleSelectItem(item.id)}\r\n                                className={selectedItems.includes(item.id) ? 'selected': ''}\r\n                            >\r\n                                <img src={item.image_url} alt={item.title}/>\r\n                                <span>{item.title}</span>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </fieldset>\r\n                <button type=\"submit\">\r\n                    Cadastrar ponto de coleta\r\n                </button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}